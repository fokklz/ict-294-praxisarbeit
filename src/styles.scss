// Custom Theming for Angular Material
@use "@angular/material" as mat;

// Include the common styles for Angular Material
@include mat.core();

// Define custom slate palette with contrast
$custom-slate: mat.define-palette(
  (
    50: #f8fafc,
    100: #f1f5f9,
    200: #e2e8f0,
    300: #cbd5e1,
    400: #94a3b8,
    500: #64748b,
    600: #475569,
    700: #334155,
    800: #1e293b,
    900: #0f172a,
    950: #020617,
    contrast: (
      50: rgba(black, 0.87),
      100: rgba(black, 0.87),
      200: rgba(black, 0.87),
      300: rgba(black, 0.87),
      400: rgba(white, 0.87),
      500: white,
      600: white,
      700: white,
      800: white,
      900: white,
      950: white,
    ),
  )
);

// Define custom accent colors
$light-accent: mat.define-palette(mat.$purple-palette, A200);
$dark-accent: mat.define-palette(mat.$purple-palette, A700);

// Define warn color
$warn-color: mat.define-palette(mat.$red-palette);

// Create Light Theme
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $custom-slate,
      accent: $light-accent,
      warn: $warn-color,
    ),
  )
);

// Create Dark Theme
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $custom-slate,
      accent: $dark-accent,
      warn: $warn-color,
    ),
  )
);

// Generate Material theme
body {
  @include mat.all-component-themes($light-theme);
  &.dark {
    // Only colors for dark theme to avoid duplicate styles
    @include mat.all-component-colors($dark-theme);
  }
}

/**
 *
 * STARTING CSS FILE
 *
 */

// Global font-imports
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap");

@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

html,
body {
  min-height: 100vh;
}

body {
  margin: 0;
  font-family: "Roboto", sans-serif;
}

.material-symbols-outlined.fill {
  font-variation-settings: "FILL" 1, "wght" 400, "GRAD" 0, "opsz" 24;
}

#wrapper {
  @apply min-h-screen text-slate-900 dark:text-slate-100 bg-slate-100 dark:bg-slate-900 transition-colors;

  .blured {
    @apply blur-sm dark:blur scale-105 p-5 pointer-events-none;
  }
}

#no-backend-overlay {
  @apply absolute h-screen w-screen left-0 top-0 flex flex-col items-center justify-center text-slate-900 dark:text-slate-100 transition-colors;
  max-width: 100vw;
  max-height: 100vh;

  .overlay {
    &-content {
      @apply flex flex-col items-center;
    }

    &-text-content {
      @apply flex flex-col items-center;

      h1,
      p,
      span {
        @apply text-center;
      }

      p,
      span {
        @apply max-w-2xl;
      }

      & > h1 {
        @apply text-6xl font-bold mb-4;
      }

      & > p {
        @apply text-lg mb-4;
      }

      & > span {
        @apply opacity-60;
      }
    }
  }
}

.special-icon {
  @apply p-4 relative rounded-full select-none;
  @apply shadow dark:shadow-slate-100;
  @apply bg-slate-100 dark:bg-slate-600;
  @apply border-2 dark:border border-slate-600 dark:border-slate-100;

  &-wrapper {
    @apply flex flex-col items-center justify-center mb-4;
  }

  .overlay {
    @apply absolute h-full w-full top-0 left-0 rounded-full z-40;
    @apply bg-gradient-to-t from-slate-100 dark:from-slate-600 from-20%;
    @apply flex flex-col items-center justify-center;

    img {
      @apply block z-50;
      animation: pulse-opacity 1.5s infinite;
    }
  }

  img {
    @apply w-52 h-52 p-5 opacity-60 invert-[20%] dark:invert;
  }
}

@keyframes pulse-opacity {
  0%,
  100% {
    opacity: 0.9;
  }
  50% {
    opacity: 0.5;
  }
}

.btn {
  position: relative;
  &::after {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @apply bg-white bg-opacity-0 transition-all;
  }

  &.p {
    @apply px-4 py-2;
  }

  &[disabled] {
    opacity: 0.5;
  }

  &:not([disabled]):hover {
    cursor: pointer;
    &::after {
      @apply opacity-20 dark:bg-opacity-5;
    }
  }
}
